df_au12$A_or_B <- factor(as.character(df_au12$A_or_B))
head(df_au12)
# Fit the model
m.au12.lz.gn <- lmer(lag_zero ~ n_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.ps.gn <- lmer(peak_synchrony ~ n_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.gs.gn <- lmer(global_synchrony ~ n_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.pl.gn <- lmer(abs_peak_lag ~ n_mutual_gaze + (1 | dyadic), data=df_au12)
#
summary(m.au12.lz.gn)
summary(m.au12.ps.gn)
summary(m.au12.gs.gn)
summary(m.au12.pl.gn)
# Fit the model
m.au12.lz.gt <- lmer(lag_zero ~ t_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.ps.gt <- lmer(peak_synchrony ~ t_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.gs.gt <- lmer(global_synchrony ~ t_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.pl.gt <- lmer(abs_peak_lag ~ t_mutual_gaze + (1 | dyadic), data=df_au12)
#
summary(m.au12.lz.gt) # sig
summary(m.au12.ps.gt)
summary(m.au12.gs.gt)
summary(m.au12.pl.gt) # sig
# Fit the model
m.au12.lz.gd <- lmer(lag_zero ~ d_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.ps.gd <- lmer(peak_synchrony ~ d_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.gs.gd <- lmer(global_synchrony ~ d_mutual_gaze + (1 | dyadic), data=df_au12)
m.au12.pl.gd <- lmer(abs_peak_lag ~ d_mutual_gaze + (1 | dyadic), data=df_au12)
#
summary(m.au12.lz.gd)
summary(m.au12.ps.gd)
summary(m.au12.gs.gd) # trend
summary(m.au12.pl.gd) # sig
df_au12 %>%
group_by(condition) %>%
get_summary_stats(global_synchrony, type = "common")
df_au12 %>%
group_by(cq_level) %>%
get_summary_stats(global_synchrony, type = "common")
# Fit the model
m.au12.gs <- lmer(global_synchrony ~ condition*cq + (1 | dyadic), data = df_au12)
summary(m.au12.gs) # sig for cq
performance::icc(m.au12.gs)
m.au12.gs %>% anova()
sjPlot::plot_model(m.au12.gs, type = "pred", terms = c("cq", "condition"))
sjPlot::tab_model(m.au12.gs)
pdf(file = "plots/m_gs_au12.pdf",
width = 6,
height = 4)
# Fit the model
m.au12.gs <- lmer(global_synchrony ~ condition*cq + (1 | dyadic), data = df_au12)
summary(m.au12.gs) # sig for cq
performance::icc(m.au12.gs)
m.au12.gs %>% anova()
sjPlot::plot_model(m.au12.gs, type = "pred", terms = c("cq", "condition"))
sjPlot::tab_model(m.au12.gs)
pdf(file = "../results/plots/m_gs_au12.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.au12.gs, type = "pred", colors = "social", terms = c("cq", "condition"), title = "") + labs(x = "Conversatinal Quality", y="Global synchrony level")
dev.off()
df_au12 %>%
group_by(condition) %>%
get_summary_stats(lag_zero, type = "common")
df_au12 %>%
group_by(cq_level) %>%
get_summary_stats(lag_zero, type = "common")
# Fit the model
m.au12.lz <- lmer(lag_zero ~ condition + cq + (1 | dyadic), data = df_au12)
summary(m.au12.lz)
performance::icc(m.au12.lz)
m.au12.lz %>% anova()
sjPlot::plot_model(m.au12.lz, type = "pred", terms = c("cq", "condition"))
sjPlot::tab_model(m.au12.lz)
df_au12 %>%
group_by(condition) %>%
get_summary_stats(peak_synchrony, type = "common")
df_au12 %>%
group_by(cq_level) %>%
get_summary_stats(peak_synchrony, type = "common")
# Fit the model
m.au12.ps <- lmer(peak_synchrony ~ condition*cq + (1 | dyadic), data = df_au12)
summary(m.au12.ps)
performance::icc(m.au12.ps)
m.au12.ps %>% anova()
sjPlot::plot_model(m.au12.ps, type = "pred", terms = c("cq","condition"))
sjPlot::tab_model(m.au12.ps)
df_au12 %>%
group_by(condition) %>%
get_summary_stats(abs_peak_lag, type = "common")
df_au12 %>%
group_by(cq_level) %>%
get_summary_stats(abs_peak_lag, type = "common")
# Fit the model
m.au12.pl <- lmer(abs_peak_lag ~ condition*cq + (1 | dyadic), data = df_au12)
summary(m.au12.pl)
performance::icc(m.au12.pl)
m.au12.pl %>% anova()
sjPlot::plot_model(m.au12.pl, type = "pred", terms = c("cq", "condition"))
sjPlot::tab_model(m.au12.pl)
library(lmerTest)
library(lme4)
library(Matrix)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggpubr)
library(MASS)
library(ez)
library(ARTool)
library(emmeans)
library(stargazer)
library(sjPlot)
library(lmerTest)
library(lme4)
library(Matrix)
library(ggplot2)
library(readxl)
library(dplyr)
library(ggpubr)
library(MASS)
library(ez)
library(ARTool)
library(emmeans)
library(stargazer)
library(sjPlot)
df <- read_excel("../data/df_individual.xlsx")
df$condition <- factor(as.character(df$condition), levels = c("240p", "480p", "1080p"))
df$participant <- factor(as.character(df$participant))
head(df)
# Box plot
ggboxplot(df, x = "condition", y = "time_card", add = "jitter", fill = "condition", xlab = "Video resolution", ylab = "Time (s)", outlier.shape = NA, width = 0.5, ylim = c(0,180), palette = "npg")
# Basic plot
pdf(file = "../results/plots/partner_time_box.pdf",
width = 4,
height = 4)
ggboxplot(df, x = "condition", y = "time_partner", add = "jitter", fill = "condition", xlab = "Video resolution", ylab = "Time (s)", outlier.shape = NA, width = 0.5, ylim = c(0,180), palette = "npg")
dev.off()
# Basic plot
pdf(file = "../results/plots/card_time_box.pdf",
width = 4,
height = 4)
ggboxplot(df, x = "condition", y = "time_card", add = "jitter", fill = "condition", xlab = "Video resolution", ylab = "Time (s)", outlier.shape = NA, width = 0.5, ylim = c(0,180), palette = "npg")
dev.off()
#
m.face.t <- lmer(time_partner ~ cq*condition + (1 | participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.face.t) #sig for resolution
#
m.face.n <- lmer(number_partner ~ cq*condition + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.face.n)
#
m.face.d <- lmer(duration_partner ~ cq*condition + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.face.d)
#
m.card.t <- lmer(time_card ~ condition*cq + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.card.t) # sig for resolution
#
m.card.n <- lmer(number_card ~ condition*cq + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.card.n) # sig for resolution
#
m.card.d <- lmer(duration_card ~ condition*cq + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.card.d)
#
m.room.t <- lmer(time_room ~ condition*cq + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.room.t)
#
m.room.n <- lmer(number_room ~ condition*cq + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.room.n)
#
m.room.d <- lmer(duration_room ~ condition*cq + (1|participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.room.d) # sig for cq
# looking-partner
performance::icc(m.face.t)
m.face.t %>% anova()
sjPlot::plot_model(m.face.t, type = "pred", terms = c("cq", "condition"), colors = "social")
pdf(file = "../results/plots/m_partner_t.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.face.t, type = "pred", colors = "social", terms = c("cq", "condition"), title = "") + labs(x = "Conversatinal Quality", y="Time (s)")
dev.off()
sjPlot::tab_model(m.face.t)
tab_model(m.face.t, file="../results/model/m_partner_t.html")
# Looking-card time
performance::icc(m.card.t)
m.card.t %>% anova()
#
pdf(file = "../results/plots/m_card_t.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.card.t, type = "pred", colors = "social", terms = c("cq", "condition"), title = "") + labs(x = "Conversatinal Quality", y="Time (s)")
dev.off()
#
sjPlot::tab_model(m.card.t)
tab_model(m.card.t, file="../results/model/m_card_t.html")
# Looking-card number
performance::icc(m.card.n)
m.card.n %>% anova()
#
pdf(file = "../results/plots/m_card_n.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.card.t, type = "pred", terms = c("cq", "condition")) + labs(x = "Conversatinal Quality", y="Time (s)", title ="Predicted values of number looking-card")
dev.off()
#
sjPlot::tab_model(m.card.n)
tab_model(m.card.t, file="../results/model/m_card_n.html")
# Looking-room
performance::icc(m.room.d)
m.room.d %>% anova()
sjPlot::plot_model(m.room.d, type = "pred", terms = c("cq", "condition"))
#
pdf(file = "../results/plots/m_room_d.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.card.d, type = "pred", terms = c("cq", "condition")) + labs(x = "Conversatinal Quality", y="Time (s)", title ="Predicted values of duration looking-room")
dev.off()
#
sjPlot::tab_model(m.room.d)
tab_model(m.room.d, file="../results/model/m_room_d.html")
##
tab_model(m.face.t, m.card.t, m.card.n,m.room.d,  file="../results/model/gaze_all.html")
# Model au12_r from cq & video resolution
m.au12 <- lmer(au12_r ~ condition*cq + (1 | participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.au12) # sig positive effect for only cq
performance::icc(m.au12)
m.au12 %>% anova()
sjPlot::plot_model(m.au12, type = "pred", terms = c("cq", "condition"))
pdf(file = "../results/plots/m_au12.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.au12, type = "pred", terms = c("cq", "condition")) + labs(x = "Conversatinal Quality", y="AU12 Intensity", title="Predicted Values of AU12 Intensity")
dev.off()
sjPlot::tab_model(m.au12)
# Model au06_r with resolution & cq
m.au06 <- lmer(au06_r ~ condition*cq + (1 | participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.au06) # H1 sig
performance::icc(m.au06)
m.au06 %>% anova()
pdf(file = "../results/plots/m_au06.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.au06, type = "pred", colors = "social", terms = c("cq", "condition"), title = "") + labs(x = "Conversatinal Quality", y="Intensity")
dev.off()
sjPlot::tab_model(m.au06)
tab_model(m.au06, m.au12, file="../results/model/au_all.html")
# Summary statistics
df %>%
group_by(condition) %>%
get_summary_stats(mea, type = "common")
df %>%
group_by(cq_level) %>%
get_summary_stats(mea, type = "common")
# Box plot
ggboxplot(df, x = "condition", y = "mea", add = "jitter", xlab = "Video resolution", ylab = "Body motion energy", outlier.shape = NA, width = 0.7, size = 0.01, ylim = c(0,4000), palette = "lancet")
ggboxplot(df, x = "cq_level", y = "mea", add = "jitter")
ggboxplot(df, x = "condition", y = "time_partner", fill = "condition", add = "jitter", xlab = "Video resolution", ylab = "Looking-partner (s)", outlier.shape = NA, width = 0.5, size = 0.01, palette = "npg")
ggboxplot(df, x = "condition", y = "time_card", add = "jitter", xlab = "Video resolution", ylab = "Looking-card (s)", outlier.shape = NA, width = 0.7, size = 0.01, palette = "lancet")
ggboxplot(df, x = "condition", y = "au06_r", add = "jitter", xlab = "Video resolution", ylab = "AU06 activity", outlier.shape = NA, width = 0.7, size = 0.01, palette = "lancet")
# Basic plot
pdf(file = "../results/plots/bm_box.pdf",
width = 6,
height = 4)
ggboxplot(df, x = "condition", y = "mea", add = "mean_ci", xlab = "Video resolution", ylab = "Body motion energy", outlier.shape = NA, width = 0.7, size = 0.01, ylim = c(0,4000), palette = "lancet")
dev.off()
# Basic plot
pdf(file = "../results/plots/bm_cq_box.pdf",
width = 6,
height = 4)
ggplot(df, aes(x = cq_level, y = mea, fill=cq_level)) +
geom_boxplot(width=0.3) +
geom_point(position = position_jitter(width = 0.2), alpha=0.5) +
theme_minimal() +
labs(
x = "Conversational Quality",
y = "Body Motion Energy")
dev.off()
m.bm <- lmer(mea ~ condition*cq + (1 | participant), data = df, control = lmerControl(optimizer="bobyqa", calc.derivs = FALSE, optCtrl=list(maxfun=2e5)),na.action = "na.exclude")
summary(m.bm) # H1 sig
performance::icc(m.bm)
sjPlot::plot_model(m.bm, type = "pred", terms = c("cq","condition"))
m.bm %>% anova()
pdf(file = "../results/plots/m_bm.pdf",
width = 6,
height = 4)
sjPlot::plot_model(m.bm, type = "pred", colors = "social", terms = c("cq", "condition"), title = "") + labs(x = "Conversatinal Quality", y="Body motion energy")
dev.off()
sjPlot::tab_model(m.bm)
tab_model(m.bm, file="../results/model/m_bm.html")
library(rMEA)
install.packages(rMEA)
install.packages("rMEA")
library(rMEA)
library(ggplot2)
library(readxl)
library(dplyr)
library(psych)
install.packages("psych")
library(rMEA)
library(ggplot2)
library(readxl)
library(dplyr)
library(psych)
library(ggpubr)
library(effsize)
install.packages("effsize")
library(rMEA)
library(ggplot2)
library(readxl)
library(dplyr)
library(psych)
library(ggpubr)
library(effsize)
library(lmerTest)
library(lme4)
library(Matrix)
library(MASS)
library(ez)
library(ARTool)
library(emmeans)
library(stargazer)
library(sjPlot)
library(broom)
mea_1080p <- readMEA("../data/real_dyads/body_motion/1080p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
mea_480p <- readMEA("../data/real_dyads/body_motion/480p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
mea_240p <- readMEA("../data/real_dyads/body_motion/240p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
## combine into a single object
mea_all <- c(mea_1080p, mea_480p, mea_240p)
mea_all <- setGroup(mea_all, "Real")
mea_smooth <- MEAsmooth(mea_all, moving.average.win = 0.5)
mea_scale <- MEAscale(mea_smooth, scale = "sd", removeNA = TRUE)
mea_clean <- MEAoutlier(mea_scale, threshold=function(x){sd(x)*10},direction="greater")
plot(mea_all[[1]])
plot(mea_clean[[1]])
#mea_random <- shuffle(mea_clean, size = 100)
#mea_random <- setGroup(mea_random, "Pseudo")
#writeMEA(mea_random,"pseudo_dyads/body_motion", what = "mea")
mea_random <- readMEA("../data/pseudo_dyads/body_motion", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
summary(mea_random)
mea_all_ccf <- MEAccf(mea_clean, lagSec = 5, winSec = 30, incSec = 10, r2Z = TRUE, ABS = TRUE)
mea_random_ccf <- MEAccf(mea_random, lagSec = 5, winSec = 30, incSec = 10, r2Z = TRUE, ABS = TRUE)
pdf(file = "../results/plots/lag_bm_pseudo.pdf",
width = 10,
height = 5)
MEAlagplot(mea_all_ccf, contrast = mea_random_ccf, by.group = TRUE)
dev.off()
#
pdf(file = "../results/plots/dist_bm_pseudo.pdf",
width = 6,
height = 4)
MEAdistplot(mea_all_ccf, contrast = mea_random_ccf, by = "group")
dev.off()
MEAlagplot(mea_all_ccf, contrast = mea_random_ccf, by.group = TRUE)
MEAdistplot(mea_all_ccf, contrast = mea_random_ccf, by = "group")
avg_ccf_all <- getCCF(mea_all_ccf, type = "grandAver")
avg_ccf_random <- getCCF(mea_random_ccf, type = "grandAver")
result_independent <- t.test(avg_ccf_all, avg_ccf_random)
# Viewing the results
#print(result_independent)
cohens_d(avg_ccf_all, avg_ccf_random)
tidy_res <- tidy(result_independent)
print(tidy_res)
ds <- data.frame("Synchrony" = c(avg_ccf_all), "Group" = group(mea_all_ccf))
describe(ds)
ds_random <- data.frame("Synchrony" = c(avg_ccf_random), "Group" = group(mea_random_ccf))
describe(ds_random)
ds_new <- rbind(ds, ds_random)
# Create a boxplot by group
#boxplot(Synchrony ~ Group, data = ds_new, ylab = "Global synchrony")
ggboxplot(data = ds_new, x = "Group", y = "Synchrony", add = "jitter", fill ="Group", width = 0.5, ylab = "Global synchrony", palette = "npg")
# Basic plot
pdf(file = "../results/plots/b_pseudo_box.pdf",
width = 4,
height = 4)
ggboxplot(data = ds_new, x = "Group", y = "Synchrony", add = "jitter", fill ="Group", width = 0.5, ylab = "Global synchrony", palette = "npg")
dev.off()
## resolution
au12_1080p <- readMEA("../data/real_dyads/au12_r/1080p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
au12_480p <- readMEA("../data/real_dyads/au12_r/480p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
au12_240p <- readMEA("../data/real_dyads/au12_r/240p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
## combine into a single object
au12_all <- c(au12_1080p, au12_480p, au12_240p)
au12_all <- setGroup(au12_all, "Real")
au12_smooth <- MEAsmooth(au12_all, moving.average.win = 0.5)
au12_scale <- MEAscale(au12_smooth, scale = "sd", removeNA = TRUE)
au12_clean <- MEAoutlier(au12_scale, threshold=function(x){sd(x)*10},direction="greater")
## Generate a random sample
#au12_random <- shuffle(au12_clean, size = 100)
#au12_random <- setGroup(au12_random, "Pseudo")
#writeMEA(au12_random,"pseudo_dyads/au12", what = "mea")
au12_random <- readMEA("../data/pseudo_dyads/au12", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
summary(au12_random)
au12_all_ccf <- MEAccf(au12_clean, lagSec = 5, winSec = 30, incSec = 10, r2Z = TRUE, ABS = TRUE)
au12_random_ccf <- MEAccf(au12_random, lagSec = 5, winSec = 30, incSec = 10, r2Z = TRUE, ABS = TRUE)
pdf(file = "../results/plots/lag_au12_pseudo.pdf",
width = 6,
height = 4)
MEAlagplot(au12_all_ccf, contrast = au12_random_ccf, by.group = TRUE)
dev.off()
#
pdf(file = "../results/plots/dist_au12_pseudo.pdf",
width = 6,
height = 4)
MEAdistplot(au12_all_ccf, contrast = au12_random_ccf, by = "group")
dev.off()
MEAlagplot(au12_all_ccf, contrast = au12_random_ccf, by.group = TRUE)
MEAdistplot(au12_all_ccf, contrast = au12_random_ccf, by = "group")
avg_au12_all <- getCCF(au12_all_ccf, type = "grandAver")
avg_au12_random <- getCCF(au12_random_ccf, type = "grandAver")
result_independent <- t.test(avg_au12_all, avg_au12_random)
#print(result_independent)
cohens_d(avg_au12_all, avg_au12_random)
tidy_res <- tidy(result_independent)
print(tidy_res)
ds <- data.frame("Synchrony" = c(avg_au12_all), "Group" = group(au12_all_ccf))
describe(ds)
ds_random <- data.frame("Synchrony" = c(avg_au12_random), "Group" = group(au12_random_ccf))
describe(ds_random)
ds_new <- rbind(ds, ds_random)
# Basic plot
# Basic plot
pdf(file = "../results/plots/au12_pseudo_box.pdf",
width = 4,
height = 4)
ggboxplot(data = ds_new, x = "Group", y = "Synchrony", add = "jitter", fill ="Group", width = 0.5, ylab = "Global synchrony", palette = "npg")
dev.off()
ggplot(ds_new, aes(x = Group, y = Synchrony, fill=Group)) +
geom_boxplot(width=0.3) +
geom_point(position = position_jitter(width = 0.2), alpha=0.5) +
theme_minimal() +
labs(
x = "Group",
y = "Global Synchrony of AU12")
## resolution
au06_1080p <- readMEA("../data/real_dyads/au06_r/1080p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
au06_480p <- readMEA("../data/real_dyads/au06_r/480p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
au06_240p <- readMEA("../data/real_dyads/au06_r/240p", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
## combine into a single object
au06_all <- c(au06_1080p, au06_480p, au06_240p)
au06_all <- setGroup(au06_all, "Real")
au06_smooth <- MEAsmooth(au06_all, moving.average.win = 0.5)
au06_scale <- MEAscale(au06_smooth, scale = "sd", removeNA = TRUE)
au06_clean <- MEAoutlier(au06_scale, threshold=function(x){sd(x)*10},direction="greater")
## Generate a random sample
#au06_random <- shuffle(au06_clean, size = 100)
#au06_random <- setGroup(au06_random, "Pseudo")
#writeMEA(au06_random,"pseudo_dyads/au06", what = "mea")
au06_random <- readMEA("../data/pseudo_dyads/au06", sampRate = 30, s1Col = 1, s2Col = 2,
s1Name = "Participant_A", s2Name = "Participant_B", skip=1,
idOrder = c("group","id","session"), idSep = "_")
summary(au06_random)
au06_all_ccf <- MEAccf(au06_clean, lagSec = 5, winSec = 30, incSec = 10, r2Z = TRUE, ABS = TRUE)
au06_random_ccf <- MEAccf(au06_random, lagSec = 5, winSec = 30, incSec = 10, r2Z = TRUE, ABS = TRUE)
pdf(file = "../results/plots/lag_au06_pseudo.pdf",
width = 6,
height = 4)
MEAlagplot(au06_all_ccf, contrast = au06_random_ccf, by.group = TRUE)
dev.off()
#
pdf(file = "../results/plots/dist_au06_pseudo.pdf",
width = 6,
height = 4)
MEAdistplot(au06_all_ccf, contrast = au06_random_ccf, by = "group")
dev.off()
MEAlagplot(au06_all_ccf, contrast = au06_random_ccf, by.group = TRUE)
MEAdistplot(au06_all_ccf, contrast = au06_random_ccf, by = "group")
avg_au06_all <- getCCF(au06_all_ccf, type = "grandAver")
avg_au06_random <- getCCF(au06_random_ccf, type = "grandAver")
result_independent <- t.test(avg_au06_all, avg_au06_random)
# Viewing the results
print(result_independent)
cohens_d(avg_au06_all, avg_au06_random)
tidy_res <- tidy(result_independent)
print(tidy_res)
ds <- data.frame("Synchrony" = c(avg_au06_all), "Group" = group(au06_all_ccf))
describe(ds)
ds_random <- data.frame("Synchrony" = c(avg_au06_random), "Group" = group(au06_random_ccf))
describe(ds_random)
ds_new <- rbind(ds, ds_random)
# Basic plot
pdf(file = "../results/plots/au06_pseudo_box.pdf",
width = 4,
height = 4)
ggboxplot(data = ds_new, x = "Group", y = "Synchrony", add = "jitter", fill ="Group", width = 0.5, ylab = "Global synchrony", palette = "npg")
dev.off()
ggplot(ds_new, aes(x = Group, y = Synchrony, fill=Group)) +
geom_boxplot(width=0.3) +
geom_point(position = position_jitter(width = 0.2), alpha=0.5) +
theme_minimal() +
labs(
x = "Group",
y = "Global Synchrony of AU06")
